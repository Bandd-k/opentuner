{"name":"OpenTuner","tagline":"An extensible framework for program autotuning","body":"Program autotuning has been demonstrated in many domains to achieve better\r\nor more portable performance.  However, autotuners themselves are often not\r\nvery portable between projects because using a domain informed search space\r\nrepresentation is critical to achieving good results and because no single\r\nsearch technique performs best for all problems.\r\n\r\nOpenTuner is a new framework for building domain-specific multi-objective\r\nprogram autotuners. OpenTuner supports fully customizable configuration\r\nrepresentations, an extensible technique representation to allow for\r\ndomain-specific techniques, and an easy to use interface for communicating\r\nwith the tuned program. A key capability inside OpenTuner is the use of\r\nensembles of disparate search techniques simultaneously, techniques which\r\nperform well will receive larger testing budgets and techniques which perform\r\npoorly will be disabled.\r\n\r\nSystem dependencies\r\n-------------------\r\n\r\nA list of system dependencies can be found in [debian-packages-deps][]\r\nwhich are primarily python 2.6+ (not 3.x) and sqlite3 (or your\r\n[supported][sqlalchemy-dialects] database backend of choice).\r\n\r\nOn Ubuntu/Debian there can be installed with:\r\n\r\n    sudo apt-get install `cat debian-packages-deps | tr '\\n' ' '`\r\n\r\n[debian-packages-deps]: https://raw.github.com/jansel/opentuner/master/debian-packages-deps\r\n[sqlalchemy-dialects]: http://docs.sqlalchemy.org/en/rel_0_8/dialects/index.html\r\n\r\nPython dependencies\r\n-------------------\r\n\r\nA list of python dependencies can be found in [python-packages][] these can\r\neither be installed system-wide with `pip` or `easy_install`.\r\n\r\n    sudo apt-get install python-pip\r\n    sudo pip install -r python-packages\r\n\r\nOr you can use virtual env to create a isolated python environment by running:\r\n\r\n    python ./venv-bootstrap.py\r\n\r\nwhich will create a ./venv/bin/python (./venv/Scripts/python.exe on windows)\r\nwith all the required packages installed.\r\n\r\n[python-packages]: https://raw.github.com/jansel/opentuner/master/python-packages\r\n\r\nChecking Installation\r\n---------------------\r\n\r\nQuickly checking that a successful installation has been made, may be performed\r\nby running an example program such as:\r\n\r\n    ./examples/rosenbrock/rosenbrock.py\r\n\r\nTutorials\r\n---------\r\n\r\n- A tutorial for creating new techniques can be found [here][technique-tutorial].\r\n\r\nMore coming soon!\r\n\r\n[technique-tutorial]:  https://github.com/jansel/opentuner/wiki/TechniqueTutorial\r\n\r\n\r\nPapers\r\n---------\r\n\r\n- [OpenTuner: An Extensible Framework for Program Autotuning][techreport1]. <br>\r\n  Jason Ansel, Shoaib Kamil, Kalyan Veeramachaneni, Una-May O'Reilly,  Saman Amarasinghe. <br>\r\n  MIT CSAIL Technical Report MIT-CSAIL-TR-2013-026.\r\n  November 1, 2013.\r\n\r\n[techreport1]: http://dspace.mit.edu/handle/1721.1/81958\r\n\r\n\r\nContributing Code\r\n-----------------\r\n\r\nThe preferred way to contribute code to OpenTuner is to fork the project\r\non github and [submit a pull request][pull-req].  You can also submit a\r\n[patch via email][email-patch] to jansel@csail.mit.edu.\r\n\r\n[pull-req]: https://www.openshift.com/wiki/github-workflow-for-submitting-pull-requests\r\n[email-patch]: http://alblue.bandlem.com/2011/12/git-tip-of-week-patches-by-email.html\r\n\r\n","google":"UA-42925849-1","note":"Don't delete this file! It's used internally to help with page regeneration."}